----Funkciq _za_nivo_na_budjet_na_film
USE MARVEL;
DELIMITER $$
CREATE FUNCTION UDF_GET_MOVIE_BUDGET_LEVEL(MOVIE_BUDGET DECIMAL(15,2))
RETURNS VARCHAR(10)
DETERMINISTIC
BEGIN
    DECLARE BUDGET_LEVEL VARCHAR(10);
    IF MOVIE_BUDGET < 100000000 THEN
        SET BUDGET_LEVEL = 'Нисък';
    ELSEIF MOVIE_BUDGET BETWEEN 100000000 AND 200000000 THEN
        SET BUDGET_LEVEL = 'Стандартен';
    ELSE
        SET BUDGET_LEVEL = 'Висок';
    END IF;
    RETURN BUDGET_LEVEL;
END $$
DELIMITER ;

SELECT MOVIE_TITLE, MOVIE_BUDGET, UDF_GET_MOVIE_BUDGET_LEVEL(MOVIE_BUDGET) AS BUDGET_LEVEL
FROM MARVEL_MOVIES

DELIMITER ;

SELECT MOVIE_TITLE AS "Име на филма", 
MOVIE_BUDGET AS "Бюджет на филма", 
UDF_GET_MOVIE_BUDGET_LEVEL(MOVIE_BUDGET) AS "Ниво на бюджета"
FROM MARVEL_MOVIES;



---funkciq za filmi izbili budjeta si prez premiernite projekcii
DELIMITER $$

CREATE FUNCTION UDF_GET_OVER_BUDGET_DATE(MOVIE_ID INT)
RETURNS DATE
DETERMINISTIC
BEGIN
    DECLARE OVER_BUDGET_DATE DATE;

    SELECT MIN(SCREENING_DATE)
    INTO OVER_BUDGET_DATE
    FROM MARVEL_MOVIE_PREMIERE_SCREENINGS S
    INNER JOIN MARVEL_MOVIES M ON S.MOVIE_ID = M.MOVIE_ID
    WHERE S.MOVIE_ID = MOVIE_ID AND S.DAILY_BOX_OFFICE > M.MOVIE_BUDGET;

    RETURN OVER_BUDGET_DATE;
END $$

DELIMITER ;
SELECT 
    M.MOVIE_ID AS "ID на филма",
    M.MOVIE_TITLE AS "Име на филма",
    M.MOVIE_BUDGET AS "Бюджет",
    UDF_GET_OVER_BUDGET_DATE(M.MOVIE_ID) AS "Ден с приходи над бюджета"
FROM 
    MARVEL_MOVIES M
WHERE 
    UDF_GET_OVER_BUDGET_DATE(M.MOVIE_ID) IS NOT NULL
ORDER BY 
    M.MOVIE_ID ASC;
